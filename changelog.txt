1.0.9.0 beta  16.11.2009
 - Create Delphi 2009 package.
 - VerifyIndex was added
 - Fix bug: records not deleted after [1.0.8.10 beta 1)] modification.
 - Fix bug: access voilation in FileLock procedure, when table is empty.
 - Fix bug in AddFields and DeleteFields procedures. Not init record buffer with blanks.

1.0.8.10 beta 
 - Now VKDBF can read 'N' fields with ',' decimal separator.
 - fix bug. When invoke RLock or FLock not refresh record buffer.

1.0.8.0 beta  06.09.2007
 - fix bug in TVKSmartDBF.SaveToDBT procedure when save lob in SaveOnTheSamePlace mode.
 - add ReCrypt method.
 - add cmCustomer mode in Crypt object.
 - fix bug in TVKDBFExprParser.SuiteFieldList: the suitable index define not correct.
 - add methods
     SetRange(FieldList; FieldValuesLow; FieldValuesHigh);
 - add DeleteFields method.
 - add AddFields method.
 - Fix bug: DBEval not work with crypt table.
 - Add IsRLock method.
 - Fix bug: Incorect handle LOB field with types *_NB.
 - Fix bug: incorect handle 'I' type fields.
 - Make TGostCrypt.InitKey1 and new type of Crypt method - Gost1
 - develop DESCEND function with DATE type.
 - Realize PADL, PADR, PADC function in parser.
 - Make package for Delphi 2005.
 - Advance TVKTrieTreeSorter class.
 - Fix bug (AV and wrong found key) in
    function TVKSmartDBF.FindKey(
      const KeyValues: array of const): Boolean;
    function TVKSmartDBF.FindNearest(
      const KeyValues: array of const): boolean;
 - DESCEND() function was realized in TVKDBFExprParser class.
 - Fix bug: Don't work TVKSmartDBF.Pack for encrypted files.
 - Fix bug: FLock, RLock(nRec), Unlock, RUnlock...
 - Fix bug: TVKNTXOrder.CreateOrder work incorrect when Crypt.Active = True.
 - Fix bug: Master->Detail with TrimCType property not work.

1.0.7.0 beta  05.03.2005
 - Fix bug: TVKNTXIndex.FindKey. When FindKey find key in
   several the same key values where first value is in
   deleted record and SetDeleted property is
   True then FindKey didn't find next key in normal record.
 - Add property TrimInLocate: boolean; for control
   trailing spaces in key for Locate() method.
   At the instance of guys from Falcon-Soft
   (http://www.falconsoft.hu).
 - Add functions ANSIUPPER() and ANSILOWER() in VKDBFParser.
   Change UPPER() and LOWER() functions to call Delphi
   UpperCase() and LowerCase() functions (instead of
   AnsiUpperCase() and AnsiLowerCase(), now it use in
   ANSIUPPER() and ANSILOWER()).
 - Fix bug: Not save
      property Collation
      property LimitPages
   in DFM file.
   property NTXRange save in DFM not correct.
 - Fix bug: When TVKDBFOrder object has destroied then
   according TIndex object must be destroy. Otherwise
   any monipulation with it bring to "Access vialation".
 - Fix bug: In TVKNTXIndex.CompareKeys procedure replace
    CharToOem(pChar(S1), T1);
    CharToOem(pChar(S2), T2);
   to
    TVKDBFNTX(FIndexes.Owner).Translate(S1,
                                pChar(@T1[0]), True);
    TVKDBFNTX(FIndexes.Owner).Translate(S2,
                                pChar(@T2[0]), True);
   It makes right order with collation when OEM = False;
 - Make TVKNTXIndex.CreateIndexUsingQuickSort procedure;
 - Add pre-sort buffer in TVKNTXIndex.CreateIndex method
   and add PreSorterBlockSize: LongWord parameter to this
   procedure;
 - Optimize FUseCount variable in TVKNTXBuffer class;
 - Fix bug in TVKRAMQuickSorter.Sort procedure: "Access violation"
 - Fix bug in TVKNTXIndex.FindKeyFields for partual string
    keys
 - Make TVKNTXIndex.CreateIndexUsingTreeSort
    and TVKNTXIndex.CreateIndexUsingRBTreeSort
    procedures;
 - Remove property TIndex.CustomCollatingTable, this type
    not support in Borland C++Builder :-(
 - Fix some memory licks;
 - Made TVKNTXIndex.CreateIndexUsingSorter procedure to
    create index file using different method of inner and
    outer sorting.
    Such as TVKQuickSorter, TVKBinaryTreeSorter,
    TVKRedBlackTreeSorter, TVKAVLTreeSorter (any
    class extends TVKSorterAbstract).
 - Made TVKNTXIndex.CreateIndexUsingAVLTreeSort
 - Made hash table for Binary Tree Sorters, -
    TVKBinaryTreeSorter, TVKRedBlackTreeSorter,
    TVKAVLTreeSorter (any class extends
    TVKBinaryTreeSorter)
 - Made new properties to manage hash table in binary tree
    sorters:
    property HashTypeForTreeSorters: TVKHashTypeForTreeSorters;
    property MaxBitsInHashCode: TVKMaxBitsInHashCode;
 - Fix bug. When procedure TVKNTXIndex.CreateIndex work in
    Exclusive mode not properly set FUpdated variable and
    work with index become unavailable.
 - I've made new procedure to create index -
    TVKNTXIndex.CreateIndexUsingMergeBinaryTreeAndBTree.
    I thought it will be cool, but it's turned out sediment.
 - Has made TVKNTXIndex.CreateIndexUsingBTreeHeapSort, but
    it's also sediment.
 - Has made TVKNTXIndex.CreateIndexUsingFindMinsAndJoinItToBTree, but
    it is sediment too.
 - Has made TVKNTXIndex.CreateIndexUsingAbsorption.
    Do you guess? Yes! It's sediment.
 - Has made TVKNTXIndex.CreateIndexUsingTrieTreeSort. It's
    inner sort method. It's work good, but needs very mach
    memory. In the future I'll make it with
    flexible TVKTrieNode chain. And I think it will be much
    better.
 - Has made TVKNTXIndex.CreateIndexUsingAbsorptionSort. It's
    outer sort method. It's not vary good. I'll work further...
 - Remove TVKNTXIndex.CreateIndex methods:
      TVKNTXIndex.CreateIndexUsingMergeBinaryTreeAndBTree
      TVKNTXIndex.CreateIndexUsingBTreeHeapSort
      TVKNTXIndex.CreateIndexUsingFindMinsAndJoinItToBTree
      TVKNTXIndex.CreateIndexUsingAbsorption
 - Add TVKNTXIndex.LimitPages.PagesPerBuffer; property
 - Add AutoInc field in Locate method.
 - Change master->detail mechanism. Now it's work by
    PartualKeyValue.
 - Fix bug in master->detail mechanism.
 - Fix bugs in GetFieldData method.
 - Add OuterSorterProperties property to TIndex object
	for manage Outer Sorter Merge algorithm.
 - Add
		procedure TIndex.CreateIndexUsing8PathMergeSort;
		procedure TIndex.CreateIndexUsing4PathMergeSort;
		procedure TIndex.CreateIndexUsingMergeSort;
	procedures for Create indexes using outer merge sort
	algorithm.
 - Add property TrimCType for manage retrive values from 'C' type datatype.

1.0.6 beta  02.03.2004
 - Fix error in Locate by index. If Index containt key like
   '50' and you try Locate('Id',VarArrayOf(['5']),[]) then
   this locate find key '50';
 - Fix bug in
   function TVKNTXRange.InRange(S: String): boolean;
   Now it correct determinate is S in NTXRange or not.
   It need for set RecNo while Range is active, for
              example...;
 - Fix bug: incorrect create index when key size more then
	             194 chars;
           4) For types ( dbftString, dbftString_N,
	             dbftFixedChar, dbftWideString ) set length more than
	                 255 bytes;
 - Fix bug: incorrect create index for decimal keys for D6
	             and D7;
 - Add parameter TmpInCurrentPath: boolean in
   TVKSmartDBF.Pack and TIndexes.CreateCompactIndex methods
   for manage location of temporary files created in these
   methods;
 - Fix bug: TVKNTXIndex.FindKey function not work correctly
   when seek first key in the range of the same keys;
 - Limit loaded NTX pages in mamory:
    property TIndex.LimitPages: TVKLimitIndexPages;
 - Add functions to Expression Parser:
      - VAL();
      - STUFF();
      - STRTRAN();
 - Add new parameter var ExitCode: Integer into OnDBEval and
    OnSubIndex events for controling exit from evalution loop.
    If you set ExitCode := 1 the evalution loop will be
	                  stop;
 - DBASE 4 - 7 support:
      - support DBase types 'I', '+', 'O', '@',
	  	                  'B', 'F', 'G';
	                    - support DBase 7 LOB storage (DBT file);
	                    - support locking schema for DBase 3 - 7;
 - FoxPro and Visual FoxPro support:
      - support Visual FoxPro types 'C binary', 'M
	  	                  binary', 'Y', 'T', 'P', 'B', 'I', 'G';
	                    - support  FoxPro LOB storage (FPT file);
	                    - support locking schema for Visual FoxPro;
	                    - support NULLs for Visual FoxPro;
 - support Auto-increment fields for DBase and Visual FoxPro;
 - New
    property LobVersion: xBaseVersion;
    property LobBlockSize: Integer;
    property LockProtocol: LockProtocolType;
    property LobLockProtocol: LockProtocolType;
    property FoxTableFlag: TTableFlag;
    was added;
 - Collation engine was added in each order and index:
    property TIndex.Collation: TVKCollation;
 - 16 collation tables + one custom collation table;
 - More...;

1.0.5 beta  18.10.2002
 - New property StorageType
 - property DBFFieldDefs now fill fields definition on open DataSet
 - New data tapes:
      dbftDBFDataSet,         // DataSet
      dbftDBFDataSet_NB,      // DataSet with absolute pointer
                              // (dbftU4_NB) to a lob
                              // file and not align 512 byte
                              // pages into the Lob
 
 - New component TVKNestedDBF related with dbftDBFDataSet and dbftDBFDataSet_NB.
 - Fix bug when Field.IsNull for 'C' data type always return True.
   (Thanks Alexander Manuzin)
 - Fix bug in TVKSmartDBF.NextBuffer. When read 1A end byte, it
   replace first byte in FBuffer (Delete byte in first record in
   FBuffer).
 - Fix bug: When Edit record and it filtered by Filter or
   SetDeleted the record is not hidden in DB-Aware controls.
 - Add SoftSeek parameter in TVKNTXIndex.FindKey procedure.
 - TVKNTXIndex.Seek, TVKNTXIndex.SeekFirst,
   TVKNTXIndex.SeekFirstRecord, TVKNTXIndex.SeekFields made
   throw TVKNTXIndex.FindKey procedure subject to SetDeleted,
   Filter and Range.
 - Fix bug: IsNull in culculated and lookup field not work.
 - Add Validation handler to the Field and ReadOnly check.
 - On SetDeleted and Filtered call Refresh method
    (it was First method).
 - Add properties TVKDBFNTX.Orders[Num]: TVKNTXIndex and
    TVKDBFNTX.OrdersByName[Name]: TVKNTXIndex
 - Make Source for D5 and D6. (Use $IFDEF VER130, VER140)
 - Delete property TAccessMode.ShareDenyRead and
    TAccessMode.ShareCompat
 - Fix bug: Incorrect work with OEM Unique index.
 - Fix bug: If LookUp result Integer or Float - error.
 - Fix bug: Lookup field by calculated field - error.
 - Now Filtering record accepted into the DataSet use
    Filter string AND OnFilterRecord event together.
 - Fix bug: When set range by index for LowKey and HiKey
    are out of keys in index the DataSet show last record by
    index.
 - Fix bug: Modify DataSet incorrect when unique index or
    FOR index used.
 - Make over Range.
 - Add parameter Rec in TVKNTXIndex.FindKey method.
 - Fix bug: 'Variant array index out of bounds' with
    partual key search in TVKSmartDBF.FindKey for multiple
    key.
 - Property IndexDefs...
 - Property IndexBags... with set of orders and StorageType.
 - Add functions in Expression Parser:
      - IF()
      - IIF()
      - RIGHT()
      - LEFT()
      - SPACE()
      - STRZERO()
      - ALLTRIM()
 - Add TVKDBFFieldDef.Tag property. Use it instead of
    TField.Tag because TField.Tag occupied with TVKDBFFieldDef
    object reference.
 
    ATTANTION:
      Use TVKDBFFieldDef(TField.Tag).Tag
        instead of
      TField.Tag
 
 - Add error 'TVKSmartDBF.InternalOpen: BufferSize too small!'
 - Message 'Table %s create successfully!' not appear in
    Loading state.
 
1.0.4 beta  23.05.2002
 - Add Method TranslateBuff and rewrite methods CreateBlobStream and SaveToDBT 
   with TranslateBuff to prevent 'Access violation' in read and write CLOB.
 - When set RecNo check Filter, SetDeleted and Range validation.
 - Fix bud in TVKNTXRange.InRange(S: String) method
 - Add event OnCreateIndex
 - Add public var FullLengthCharFieldCopy to TVKSmartDBF for
   manage SetFieldData for 'C' type fields
 - Fix buf with allocate memory for FLocateBuffer (AV when
   Locate, Lookup, ReindexAll, DBEval or Pack if BufferSize <> 4096)
 - Complex actions to make index compatibility with CLIPPER:
        - Full rewrite TVKNTXIndex.DeleteKey procedure, now it
          normalize index like a CLIPPER.
        - Make TVKNTXIndex.DeleteKeyStyle property to switch
          Delete Key style between CLIPPER normalize index and
          all athers (Apollo, Halcyon...).
        - Add TVKNTXCompactIndex.NormalizeRest method to make
          normalize index in TVKNTXIndex.CreateCompactIndex and
          TVKNTXIndex.SubNtx procedures.
   ATTENTION: Rebuild all indexes after apply this version !
 - Add methods:
          TVKNTXIndex.FindKey
          TVKNTXIndex.FindKeyFields with overloaded some parameters
   It is the same SeekFirst..., but subject to SetDeleted, Filter and Range.
   Partual key sapport Ok!
 - Rewrite Lokate and Lookup on TVKNTXIndex.FindKeyFields.
 - Add methods:
          TVKSmartDBF.SetKey;
          TVKSmartDBF.EditKey;
          TVKSmartDBF.GotoKey;
          TVKSmartDBF.GotoNearest;
          TVKSmartDBF.DropEditKey;
          TVKSmartDBF.FindKey;
          TVKSmartDBF.FindNearest;
   All this methods work throw TVKNTXIndex.FindKeyFields.
 - Add TVKSmartDBF.IndexName property.
 - Make type 'C' is not be NULL, if field empty Field.AsString
   return string of spases lethgt of field length.

1.0.3 beta  25.03.2002
 - In Mamory manager add raise error 'TVKDBFOneAlloc: Can not allocate 0 bytes memory!'
 - Add methods CompareBookmarks, BookmarkValid
 - CretateNow -> CreateNow
 - Deleted constant LOCATE_BUFFER_SIZE
 - Check empty KeyValues in LocateRecord->LocatePass
 - Fixed bug in indexing Int64 fields
 - TVKNTXIndex.CreateCompactIndex method was added
 - Add Partial Key for index Locate and SeekFirst methods in TVKNTXIndex class
 - Add 1A byte at end of DBF table in InternalClose method
 - Add DBEval method and OnDBEval event

1.0.2 beta  18.02.2002
 - Pack method was added;
 - LookupOptions property was added;
 - Explicitly type convention in SeekFields, Lookup, Locate was added;
 - Recall and Delete record methodths was added;
 - Explicit full scan added in LocateRecord method;
 - ReindexAll method was added;
 - Fix bug with dbftBlob and dbftGraphic types;
 - Fix bug 'List index out of bounds' for index expression
   with Numeric literal contain decimal separator. Ambiguously
   determined decimal separator and literal separator ','.

1.0.1 beta  28.01.2002
 - Fix bug in Exclusive index support;
 - Fix bug in Add Fields in Design time;
 - Fix bug with Long Number fields (like ["F1", "N", 10, 0]);
 - WideString support was added;
 - Truncate (ZAP) method was added;
 - More...;

1.0.0 beta  28.01.2002
